from os import getenv
from random import choice

from dotenv import load_dotenv
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackContext, CallbackQueryHandler


OBJECTS = ["—Ç–≤–æ–∏ –≥–ª–∞–∑–∞", "—Ç–≤–æ–∏ –Ω–æ–≥–∏", "—Ç–≤–æ—è —Ñ–∏–≥—É—Ä–∞",
           "—Ç–≤–æ–∏ –≤–æ–ª–æ—Å—ã", "—Ç–≤–æ–∏ —Ä—É–∫–∏", "—Ç–≤–æ–∏ –≥—É–±—ã", "—Ç–≤–æ–π –≥–æ–ª–æ—Å", ]
COMPARISONS = ["–∑–∞–∫–∞—Ç", "—Ä–∞—Å—Å–≤–µ—Ç", "—Å–æ–ª–Ω–µ—á–Ω—ã–π —Å–≤–µ—Ç", "–ª—É–Ω–Ω—ã–π —Å–≤–µ—Ç",
               "–Ω–µ–±–æ", "–æ–±–ª–∞–∫–∞", "–≤–æ–ª–Ω—ã", "–º–µ—Ç–µ–ª—å", "—Å–Ω–µ–≥", "—Å–æ–ª–Ω–µ—á–Ω—ã–π –∑–∞–π—á–∏–∫", "—Ä–æ—Å–∞", "–±—Ä–∏–∑", "–¥—É–Ω–æ–≤–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞", "—à—É–º –ø—Ä–∏–±–æ—è",]
LOCATIONS = ["–≤ –ø—É—Å—Ç—ã–Ω–µ", "–≤ –æ–∫–µ–∞–Ω–µ", "–≤ –ª–∞–≤–∞–Ω–¥–æ–≤–æ–º –ø–æ–ª–µ", "—Å—Ä–µ–¥–∏ –∑–≤—ë–∑–¥",
             "–Ω–∞ –Ω–µ–±–µ—Å–∞—Ö", "–≤ –±–µ—Å–∫—Ä–∞–π–Ω–µ–º –∫–æ—Å–º–æ—Å–µ", "–≤ –≥—É—Å—Ç–æ–π —Ç—Ä–∞–≤–µ", "–Ω–∞ —Å–Ω–µ–≥—É", "–≤ —Ä–æ—Å–µ", "–≤ –æ–±–ª–∞–∫–∞—Ö",]
EMOJIS = ["üòç", "ü•∞", "üòö", "üíå", "üòª", "üíò"]
COMPLIMENT_COMMAND = "compliment"


def generate_compliment() -> str:
    return f"{choice(OBJECTS).capitalize()}... –∫–∞–∫ {choice(COMPARISONS)} {choice(LOCATIONS)} {choice(EMOJIS)}"


def get_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton("–î—Ä—É–≥–æ–π", callback_data=COMPLIMENT_COMMAND)
            ]
        ]
    )


def start(update: Update, context: CallbackContext) -> None:
    update.message.reply_text(generate_compliment(),
                              reply_markup=get_keyboard())


def compliment(update: Update, context: CallbackContext) -> None:
    update.callback_query.answer("–ì–æ—Ç–æ–≤–æ!")

    if update.callback_query.data == COMPLIMENT_COMMAND:
        update.callback_query.edit_message_text(
            generate_compliment(), reply_markup=get_keyboard())

    else:
        update.callback_query.answer("–ê?")


if __name__ == "__main__":
    load_dotenv()

    updater = Updater(getenv("TELEGRAM_BOT_TOKEN"))

    updater.dispatcher.add_handler(CommandHandler("start", start))
    updater.dispatcher.add_handler(CallbackQueryHandler(compliment))

    updater.start_polling()
    updater.idle()

